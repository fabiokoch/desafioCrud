openapi: 3.0.3
info:
  title: Swagger CRUD Locadora - OpenAPI 3.0
  description: |-
    CRUD de locadora de ve√≠culos
  version: 1.0.11
servers:
  - url: http://localhost:8080/rent/v1
tags:
  - name: register
    description: Vehicle registration for a rental company
paths:
  /car:
    post:
      tags:
        - register
      summary: Register a vehicle
      description: This can only be done by the logged in user..
      operationId: createCar
      requestBody:
        description: Register a vehicle
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleCreatedID'
        '400':
          description: Bad Request
        '500':
          description: Internal server error
  /car/{id}:
    put:
      tags:
        - register
      summary: Update vehicle
      description: This can only be done by the logged in user.
      operationId: updateCar
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent vehicle
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleRequest'
      responses:
        '204':
          description: Vehicle updated
        '400':
          description: Bad Request
        '404':
          description: Vehicle not found
        '500':
          description: Internal server error
        default:
          description: successful operation
    delete:
      tags:
        - register
      summary: Delete vehicle
      description: This can only be done by the logged in user.
      operationId: deleteCar
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Vehicle deleted
        '404':
          description: Vehicle not found
        '500':
          description: Internal server error
  /car/model/{model}:
    get:
      tags:
        - register
      summary: Search for an available vehicle by model
      description: This can only be done by the logged in user.
      operationId: getCarByModel
      parameters:
        - name: model
          in: path
          description: Vehicle ID
          required: true
          schema:
            type: string
            format: string
        - in: query
          name: available
          schema:
            type: boolean
            default: true
          description: Filter available vehicles
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleResponseList'
        '400':
          description: Invalid ID
        '404':
          description: Vehicle not found
  /car/brand/{brand}:
    get:
      tags:
        - register
      summary: Search for an available vehicle by brand
      description: This can only be done by the logged in user.
      operationId: getCarByBrand
      parameters:
        - name: brand
          in: path
          description: ID of vehicle
          required: true
          schema:
            type: string
            format: string
        - in: query
          name: available
          schema:
            type: boolean
            default: true
          description: Filter available vehicles
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleResponseList'
        '400':
          description: Invalid ID
        '404':
          description: Vehicle not found
components:
  schemas:
    VehicleCreatedID:
      type: object
      properties:
        id:
          type: string
          example: 1
    VehicleRequest:
      type: object
      properties:
        brand:
          type: string
          example: Fiat
        model:
          type: string
          example: Punto
        available:
          type: boolean
          example: true
    VehicleResponse:
      type: object
      properties:
        id:
          type: string
          format: string
          example: 10
        brand:
          type: string
          example: Fiat
        model:
          type: string
          example: Punto
        available:
          type: boolean
          example: true
    VehicleResponseList:
      type: array
      items:
        $ref: '#/components/schemas/VehicleResponse'
